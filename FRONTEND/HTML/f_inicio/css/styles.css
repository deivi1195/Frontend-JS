/*definir una paleta de colores*/
/*seudoelementos que no esxiten en el html, son custom properties*/

:root {
    --blanco: #ffffff;
    --oscuro: #212121;
    --primario: #dfdf06;
    --secundario: #0097A7;
    --gris: #757575;
    --gris-claro: #DFE9F3;
    /*si quisieras tener una fuente principal, se puede*/
    --fuente-principal: 3.8rem;
}

/*-->GLOBALES<--*/
html {
    font-size: 62.5%; /* hack para hacer que 1rem = 10px */
    box-sizing: border-box; /* hack para el model box de irish */
    scroll-snap-type: y mandatory; /* para hacer scroll entre secciones con efecto de deslizammiento, "Y" quiere decir que se desplazara de manera vertical por el eje del plano cartesiano, "MANDATORY= hace que cuando hagas el minimo esfuerzo de hacer scroll ya te lleve a la siguiente seccion.. PROXIMITY= HACE QUE TENGAS QUE HACER MAS ESFUERZO EN HACER SCROLL PARA MANDARDE A LA SIGUIENTE SECCION*/
}
*, *:before, *:after {  /* hack para el model box  */
    box-sizing: inherit;
}
/*-->SCROLL SNAP<--*/
.servicios,
.navegacion-principal,
.formulario { /* se coloca aqui despues de definirlo arriba */
    scroll-snap-align: center; /* en el elemento que se detenga sera centrado */
    scroll-snap-stop: always; /* siempre se va a detener en cada elemento */
}
body {
    font-size: 16px; /* hack para hacer que 1rem = 10px */
    font-family: 'JetBrains Mono', monospace;
    background-image: linear-gradient(to bottom, var(--blanco) 0%, var(--gris-claro) 50%); /* empieza el degradado desde el segundo color hacia el primer color */
}

.contenedor {
    max-width: 120rem; /*el tama単o de lo que este dentro de la clase contenedor*/
    /*puede recortar el margin de esta manera
      margin: 0 auto*/
    margin: 0 auto 0 auto; /*hace que no tenga margen ni arriba ni abajo y que de izquierda a derecha tenga el mismo tama単o de margen*/
}

.boton {
    background-color: var(--secundario);
    color: var(--blanco);
    padding: 1rem 3rem;
    margin-top: 3rem; /* separa el boton de algun elemento que tenga arriba */
    font-size: 2rem;
    text-decoration: none;
    text-transform: uppercase;
    font-weight: bold;
    border-radius: .5rem;
    width: 90%; /* se le coloca el ancho largo para que en el telefono se vea largo */
    text-align: center; /* alinear el texto despuer de alargar el boton */
    border: none;
}
@media (min-width: 480px) {
    .boton {
        width: auto; /* un media querie para que cuando la pantalla sea mas grande que 480px la anchura ya vuelva a la normalidad */
    }
}

.boton:hover { /* los inputs le quitan los acciones y estilos, asi como este caso pasarle el mouse por encima y que aparezca una manito */
    cursor: pointer;
}

.sombra {
    -webkit-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.65);
    -moz-box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.65);
    box-shadow: 0px 5px 15px 0px rgba(112,112,112,0.65);
    background-color: var(--blanco);
    padding: 2rem;
    border-radius: 1rem;
}

/* no es recomendale escribir ID(#) por que los id no se puedes repetir los nombres de los id, deben ser unicos*/

/*-->TIPOGRAFIA<--*/
h1 {                         
    font-size: 3.8rem;       
}                            
h2 {                         
    font-size: 2.8rem;       
}                            
h3 {                         
    font-size: 1.8rem;       
}                            
                             
h1, h2, h3 {                 
    text-align: center;    
}                           

/*-->TITULOS<--*/
.titulo span {
    font-size: 2rem; /* reduce el tama単o de la fuente que esta junto al h1 y h2 (freelancer) */
}

/*-->UTILIDADES<--*/
.w-small-100 { /* esta clase aumenta la anchura del elemento al 100% (para los telefonos)*/
    width: 100%;
}
@media (min-width: 768px) { /* con este media querie se quiere que en pantallas de pc el boton seas peque;o (se ajuste automaticamente) */
    .w-small-100 {
        width: auto; /* auto se ajusta al texto que tenga dentro el elemento */
    }
}
.flex {
    display: flex; /* activas el display flex en el div que se quiere usar sus funciones  */
}
.alinear-derecha {
    justify-content: flex-end; /* ya teniendo display flex activado se justifica el o los elementos dentro de ese div, en este caso fue justify-content: flex-end , osea al final de espacio disponible en este caso a la derecha */
    margin-top: 2rem;
}

/*-->NAVEGACION PRINCIPAL<--*/
.nav-bg {
    background-color: var(--secundario); /*hace que el fondo de la barra de navegacion sea del color secundario*/
}

.navegacion-principal {
    display: flex; /*activa las funcionalidades de los atributos de flex*/ 
    /*flex-direction: column;*/
    /*align-items: center; ESTE ES EL JUSTIFY-CONTENT DEL COLUMN*/
    flex-direction: column; /*los elementos esten uno encima de otro*/
    justify-content: space-between; /*justifica el contenido de forma horizontal, y que tenga un espacio etre ellos*/
}
@media (min-width: 480px) {
    .navegacion-principal {
        flex-direction: row; /*cuando el tama;o de la pantalla sea mayor a 480px los elementos esten de forma horizontal de izquierda a derecha*/ 
    }
}

.navegacion-principal a {
    display: block; /*al hacer display block hace que los elementos sean linea por linea una debajo de la otra*/
    text-align: center; /*alinea el texto al centro*/
    color: var(--blanco); /*colorea el texto en blanco*/
    text-decoration: none; /*le quita el subrayado que trae por defecto el enlace*/ 
    font-size: 2rem; /*tama;o del texto*/
    font-weight: bold; /*coloca el texto en negritas*/
    padding: 1rem; /*hace que del texto y el fondo tenga una separacion*/
}

/*hoover hace una accion cuando el mouse esta encima del elemento, en este caso cambia el color del fondo y tambien el color del texto*/
.navegacion-principal a:hover {
    background-color: var(--primario); /*colorea el fondo del enlace cuando le pasas el mouse por encima*/
    color: var(--oscuro); /*colorea el texto del enlace cuando le pasas el mouse por encima*/
}

/*-->HERO<--*/
.hero {
    background-image: url(../img/hero.jpg); /*agrega una imagen con CSS*/
    background-repeat: no-repeat; /*para que no se repita la imagen*/
    background-size: cover; /* para que cubra toda la imagen*/
    height: 45rem;  /*tama;o de la imagen*/
    position: relative; /*como es clase padre lleva relative, para que la clase hijo de contenido-hero pueda ser absoluta y mover el elemento sobre el*/
    margin-bottom: 2rem;
}

.contenido-hero {
    position: absolute;
    /*background-color: rgba(0,0,0,0.5); sintaxys anterior*/
    /*aplicando una imagen en negro con transparencia*/
    background-color: rgb(0 0 0 / 50% ); 
    width: 100%; /*hace que la imagen cubran todo el elemento 100% anchura*/
    height: 100%; /*hace que la imagen cubran todo el elemento 100% altura*/
    
    /*flex-direction: column
    align-items = se movera horizontalmente
    justify-content = se movera verticalmente
    -
    flex-direction: row
    align-items = se movera verticalmente
    justify-content = se movera horizontalmente*/
    
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.contenido-hero h2,
.contenido-hero p {
    color: var(--blanco);
}

.ubicacion {
    display: flex;
    align-items: flex-end;
}



/*-->SERVICIOS<--*/
@media (min-width: 768px) {
    .servicios {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        column-gap: 1rem;
        /*
        grid-template-columns: repeat(3, 1fr);
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-columns: 33.3% 33.3% 33.3%;
        grid-template-rows: 20rem 20rem 20rem; 
        */
        
    
        /* grid: rows / colums; EJ= grid: 200px 200px / 300px 300px; */
    }
}

.servicio {
    display: flex;
    flex-direction: column;
    align-items: center;
}
.servicio h3 {
    color: var(--secundario);
    font-weight: bold;
}
.servicio p {
    line-height: 2;
    text-align: center;
}

.servicios .iconos {
    height: 15rem;
    width: 15rem;
    background-color: var(--primario);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;

}

/*-->CONTACTO<--*/

.formulario {
    background-color: var(--gris);
    width: min( 60rem, 100% ); /*utilizar el valor mas peque単o, muestra 60rem si la pantalla es mayor de 60rem, si la pantalla es menor de 60rem entonces muestra el tama;o de la pantalla (100%)*/
    margin: 0 auto; /* puedes usar margin cuando en tu clase padre no tienes un display flex para usar justify-content */
    padding: 2rem;
    border-radius: 1rem;
}

.formulario fieldset {
    border: none;
}

.formulario legend {
    text-align: center;
    font-size: 1.8rem;
    text-transform: uppercase;
    font-weight: 700;
    margin-bottom: 2rem;
    color: var(--primario);
}

@media (min-width: 768px) {
    .contenedor-campos {
        display: grid;
        grid-template-columns: repeat(2, 3fr); /* dividir el espacio de los elementos, en este caso dos colunmas  */
      /*grid-template-columns: 50% 50%;
        grid-template-columns: 1fr 1fr;*/
        grid-template-rows: auto auto 20rem;
        column-gap: 1rem; /* para separar las columnas */
    }
    .campo:nth-child(3) { /* selecciona la clase campo y a eso le aplica nthchild(hace que cada clase del mismo nombre en este caso campo sea como un array [1,2,3,4...]), en este caso como hay cuatro clases con el nombre campo cada una tendra un lugar en el array [1,2,3,4...], en este caso al eelegir 3 seleccionara la tercera clase (de arriba hacia abajo) y le aplicara el estilo que escribas. */
        grid-column: 1 / 3;/* gridtemplate-columns define el area y grid-column modifica en donde quieres que este el elemento  */
    }
    .campo:nth-child(4) {
        grid-column: 1 / 3;
    }
}

.campo {
    margin-bottom: 1rem;
}
.campo label {
    color: var(--blanco);
    font-weight: bold;
    margin-bottom: .5rem;
    display: block; /* es para que queden una debajo de otra */

}
.campo textarea {
    height: 20rem;
}
.input-text { /* se le crea la misma clase a cada input para darle forma aqui */
    width: 100%;
    border-radius: .5rem;
    border: none;
    padding: 1.5rem;
}
/*
.campo input[type="text"],
.campo input[placeholder="Correo"] {  se puede seleccionar por el type o placeholder siendo el padre el input 
    background-color: red;
} */

/*-->FOOTER<--*/
.contenedor-footer p {
    text-align: center;
    font-weight: 400;
}



































